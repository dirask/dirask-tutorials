
# ...


server.tomcat.apr.enabled=true

server.ssl.enabled=true
server.http2.enabled=true


#   Required for Http11AprProtocol with *.pem files (only if server.tomcat.apr.enabled=true)
#
#   Use the OpenSSL command to generate own key store:
#       openssl.exe req -x509 -newkey rsa:4096 -keyout private_key.pem -out public_certificate.pem -days 365 -nodes -subj '/CN=localhost'
#
#
server.ssl.public-certificate=classpath:certificates/public_certificate.pem
server.ssl.private-key=classpath:certificates/private_key.pem


#   Required for Http11NioProtocol with JKS (only if server.tomcat.apr.enabled=false)
#
#   Use the Java CLI command to generate own key store:
#       keytool -genkey -keyalg RSA -alias my-application -keystore keystore.jks -storepass P@$$word -validity 3650 -keysize 2048
#
#
# server.ssl.key-store=classpath:certificates/keystore.jks
# server.ssl.key-store-password=P@$$word


#   Required for Http11NioProtocol with P12 (only if server.tomcat.apr.enabled=false)
#
#   Use the OpenSSL command to convert *.pem files to *.p12 file:
#       openssl pkcs12 -export -in public_certificate.pem -inkey private_key.pem -out keystore.p12 -name my-application
#
#
# server.ssl.key-store-type=PKCS12
# server.ssl.key-store=classpath:certificates/keystore.p12
# server.ssl.key-store-password=P@$$word
# server.ssl.key-alias=my-application


server.compression.enabled=true
server.compression.min-response-size=2048
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml


# ...